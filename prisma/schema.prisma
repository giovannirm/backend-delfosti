// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique // ADMINISTRATOR, CONSUMER

  users         User[]
  operationRole OperationRole[]
}

model User {
  id       Int     @id @default(autoincrement())
  name     String? @db.VarChar(50)
  email    String  @unique @db.VarChar(50)
  password String  @db.VarChar(100)
  role     Role    @relation(fields: [roleId], references: [id])
  roleId   Int

  projects Project[]
  tasks    Task[]
}

model Module {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(50)

  operations Operation[]
}

model Operation {
  id       Int    @id @default(autoincrement())
  name     String @unique @db.VarChar(50)
  module   Module @relation(fields: [moduleId], references: [id])
  moduleId Int

  operationRole OperationRole[]
}

model OperationRole {
  id          Int       @id @default(autoincrement())
  operation   Operation @relation(fields: [operationId], references: [id])
  operationId Int
  role        Role      @relation(fields: [roleId], references: [id])
  roleId      Int
}

model Project {
  id     Int    @id @default(autoincrement())
  name  String @db.VarChar(50)
  user   User   @relation(fields: [userId], references: [id])
  userId Int

  tasks Task[]
}

model Task {
  id          Int     @id @default(autoincrement())
  title       String  @db.VarChar(50)
  description String? @db.VarChar(100)
  project     Project @relation(fields: [projectId], references: [id])
  projectId   Int
  user        User    @relation(fields: [userId], references: [id])
  userId      Int
  state       String  @db.VarChar(15) // PENDING, IN_PROGRESS, DONE
}
